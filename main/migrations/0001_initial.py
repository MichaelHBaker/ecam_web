# Generated by Django 5.1.1 on 2025-01-14 01:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('source_type', models.CharField(choices=[('file', 'File Upload'), ('api', 'API Connection'), ('db', 'Database Connection')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('configuration', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Measurement Categories',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('project_type', models.CharField(choices=[('Audit', 'Audit'), ('M&V', 'Measurement & Verification')], max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIDataSource',
            fields=[
                ('datasource_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.datasource')),
                ('url_base', models.URLField(help_text='Base URL for the API')),
                ('middleware_type', models.CharField(choices=[('niagara', 'Niagara AX/N4'), ('ecostruxure', 'EcoStruxure Building'), ('metasys', 'Johnson Controls Metasys'), ('desigo', 'Siemens Desigo CC'), ('custom', 'Custom API')], help_text='Type of middleware system', max_length=20)),
                ('auth_type', models.CharField(choices=[('basic', 'Basic Auth'), ('bearer', 'Bearer Token'), ('oauth2', 'OAuth 2.0'), ('cert', 'Client Certificate')], max_length=20)),
            ],
            bases=('main.datasource',),
        ),
        migrations.CreateModel(
            name='DataImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('import_file', models.FileField(blank=True, null=True, upload_to='imports/')),
                ('row_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('error_log', models.JSONField(default=list)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_imports', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_imports', to=settings.AUTH_USER_MODEL)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='main.location')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='main.project')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('conversion_factor', models.FloatField(default=1.0, help_text="Conversion factor to category's base unit")),
                ('is_base_unit', models.BooleanField(default=False, help_text='Whether this is the base unit for its category')),
                ('supports_multipliers', models.BooleanField(default=True, help_text='Whether this type supports SI multipliers')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types', to='main.measurementcategory')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiplier', models.CharField(blank=True, choices=[('p', 'pico'), ('n', 'nano'), ('Âµ', 'micro'), ('m', 'milli'), ('', 'base'), ('k', 'kilo'), ('M', 'mega'), ('G', 'giga'), ('T', 'tera')], default='', max_length=2)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='units', to='main.measurementtype')),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='main.location')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.measurementunit')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSeriesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, help_text='UTC timestamp')),
                ('value', models.FloatField()),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeseries', to='main.measurement')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DataSourceMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_identifiers', models.JSONField(help_text='All identifiers needed to uniquely locate this point in the source system')),
                ('mapping_config', models.JSONField(default=dict, help_text='Data handling configuration (scaling, units, polling)')),
                ('last_sync', models.DateTimeField(null=True)),
                ('last_error', models.TextField(blank=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.datasource')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_mappings', to='main.measurement')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('measurement', 'data_source'), name='unique_measurement_source')],
            },
        ),
        migrations.AddConstraint(
            model_name='measurementtype',
            constraint=models.UniqueConstraint(fields=('category', 'name'), name='unique_type_per_category'),
        ),
        migrations.AddConstraint(
            model_name='measurementunit',
            constraint=models.UniqueConstraint(fields=('type', 'multiplier'), name='unique_type_multiplier'),
        ),
        migrations.AddConstraint(
            model_name='measurement',
            constraint=models.UniqueConstraint(fields=('name', 'location'), name='unique_measurement_name_per_location'),
        ),
        migrations.AddIndex(
            model_name='timeseriesdata',
            index=models.Index(fields=['measurement', 'timestamp'], name='main_timese_measure_1911dc_idx'),
        ),
        migrations.AddConstraint(
            model_name='timeseriesdata',
            constraint=models.UniqueConstraint(fields=('timestamp', 'measurement'), name='unique_measurement_timestamp'),
        ),
    ]
